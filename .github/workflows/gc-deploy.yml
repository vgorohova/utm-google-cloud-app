name: GCP Cloud Build

on:
  release:
    types: [published]


env:
    # PROJECT_ID: YOUR_PROJECT_ID # TODO: update Google Cloud project id
    SERVICE: utm-google-cloud-app # TODO: update Cloud Run service name
    REGION: us-west4 # TODO: update Cloud Run service region

jobs:
    deploy:
        # Add 'id-token' with the intended permissions for workload identity federation
        permissions:
            contents: 'read'
            id-token: 'write'
    
        runs-on: ubuntu-latest
        
        steps:
        - name: 'Checkout'
        uses: 'actions/checkout@v2'
            
        - name: 'Google Auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
            credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
                
        # - id: 'auth'
        #     uses: 'google-github-actions/auth@v0'
        #     with:
        #         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'


        - name: 'Set up Cloud SDK'
            uses: 'google-github-actions/setup-gcloud@v0'

        # - name: 'Use gcloud CLI'
        # run: 'gcloud info'

        - name: 'Start Google Cloud Build trigger'
            run: |
                export CLOUDSDK_CORE_DISABLE_PROMPTS=1
                gcloud beta builds triggers run ${{ secrets.GCP_BUILD_STAGING_TRIGGER_ID }} --tag=${{ github.event.release.tag_name }}

        - name: 'Deploy to Cloud Run'
        id: 'deploy'
        uses: google-github-actions/deploy-cloudrun@v0
        with:
            service: ${{ env.SERVICE }}
            region: ${{ env.REGION }}
            # NOTE: If required, update to the appropriate source folder
            source: ./
    
        # If required, use the Cloud Run url output in later steps
        - name: 'Show Output'
        run: echo ${{ steps.deploy.outputs.url }}





# job:
#   job_id:
#     name: Trigger Google Cloud Build
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2

#     - id: 'auth'
#       uses: 'google-github-actions/auth@v0'
#       with:
#         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

#     - name: 'Set up Cloud SDK'
#       uses: 'google-github-actions/setup-gcloud@v0'

#     - name: 'Use gcloud CLI'
#       run: 'gcloud info'

#     - name: 'Start Google Cloud Build trigger'
#       run: |
#         export CLOUDSDK_CORE_DISABLE_PROMPTS=1
#         gcloud beta builds triggers run ${{ secrets.GCP_BUILD_STAGING_TRIGGER_ID }} --tag=${{ github.event.release.tag_name }}


# jobs:

#     build:
#         runs-on: ubuntu-latest
#         steps:
        
#             - name: Run the actions/checkout
#               uses: actions/checkout@v2
# jobs:
    
#     delpoy:
#         runs-on: ubuntu-latest
    
#         steps:
#             - name: Deploy to Cloud Run
#             id: deploy
#             uses: google-github-actions/deploy-cloudrun@v0
#             with:
#               service: ${{ env.SERVICE }}
#               region: ${{ env.REGION }}
#               # NOTE: If using a pre-built image, update the image name here
#             #   image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
#               image: gcr.io/utmcloudapp/utm-google-cloud-app:${{ github.sha }}

#             # - name: 'gcr.io/cloud-builders/gcloud'
#             # args: ['run','deploy', 'utm-google-cloud-app', '--image=gcr.io/utmcloudapp/utm-google-cloud-app:$PROJECT_ID', '--region=us-west4', '--allow-unauthenticated']
#         # - name: Print the input name to STDOUT
#         #     run: echo The username is ${{ inputs.username }}